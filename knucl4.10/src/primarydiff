52a53
> #include "TRandom.h"
83d83
< 
93d92
<   //temporary using "K3He" flag for E31 mc.from Knucl:ProcessID
100c99
<   // fermi motion with 
---
>   // fermi motion
136a136
>   //  std::cout<<"========== > "<<beam_mom<<" ==========="<<std::endl;
254c254
<       vtz = -1.1*m; // before just T0
---
>       vtz = -1.5*m; // before just BLC2
539c539
<   
---
> 
567a568
> 
575,580c576,618
<   if( anaManager->GetKppShape() && cs.Id()==3000 ){ // NO spectators
<     if( !ManyBody(CMmass, nBody, mass, vec) ) goto START;    
<     double P0 = vec[0].mag();
<     double P1 = vec[1].mag();
<     vec[0] = P0*G4ThreeVector(0,0,1);  // neutron
<     vec[1] = P1*G4ThreeVector(0,0,-1); // Kpp
---
>   //  if( anaManager->GetKppShape() && cs.Id()==3000 ){ // NO spectators
>   if( anaManager->GetKppShape() ){ // Reaction ID selection remove
>     if( nBody!=2 ){
>       std::cout<<"  !!! ERROR KppShape KppShape should be 2 !!!"<<std::endl;
>       exit(0);
>     }
> 
>     if( !ManyBody(CMmass, nBody, mass, vec) ) goto START;      
> 
>     //    std::cout<<" Kpp Shape mass "<<mass[1]<<std::endl;
>     if( cs.FinlPdg(1)==13122 ){
>       const double theta_max = 8.0*degree;
>       while( true ){
> 	if( !ManyBody(CMmass, nBody, mass, vec) ) goto START;
> 	G4LorentzVector tmp;
> 	tmp.setVectM(vec[0], mass[0]);
> 	tmp.boost(boost);
> 	if( tmp.theta()<theta_max ){
> 	  //	  std::cout<<" cos(n theta) : "<<cos(tmp.theta())<<std::endl;
> 	  break;
> 	}
>       }
>     }
>     else if( cs.FinlPdg(1)==3114 ){
>       while( true ){
> 	if( !ManyBody(CMmass, nBody, mass, vec) ) goto START;
> 	G4LorentzVector tmp;
> 	tmp.setVectM(vec[0], mass[0]);
> 	tmp.boost(boost);
> 	if( fabs(tmp.x()/tmp.z())<0.2 && fabs(tmp.y()/tmp.z())<0.1 ){
> 	  //	std::cout<<" p ang : "<<cos(tmp.theta())<<std::endl;
> 	  break;
> 	}
>       }
>     }
>     else{
>       std::cout<<"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"<<std::endl;
>       exit(0);
>     }
>     // double P0 = vec[0].mag();
>     // double P1 = vec[1].mag();
>     // vec[0] = P0*G4ThreeVector(0,0,1);  // neutron
>     // vec[1] = P1*G4ThreeVector(0,0,-1); // Kpp
586c624,629
<     if( FermiMode ){
---
>     if( FermiMode==3 ){
>       if( gRandom->Rndm()<0.5 ) FermiMode=1;
>       else FermiMode=2;
>     }
> 
>     if( FermiMode==1 ){
625c668
<     } else { // if( FermiMode ){
---
>     } else if( FermiMode==0 ){ // if( FermiMode ){
651c694
<       
---
>      
673a717,857
>     } else if( FermiMode==2 ){
>            // std::cout<<"===== fermimotion offshell and two step ====="<<std::endl;
>            // std::cout<<" nbody : "<<nBody<<std::endl;
>       if( anaManager->GetTwoStep()<1 || anaManager->GetTwoStepMode()<1 ){
> 	std::cout<<"!!!!! KnuclPrimaryGeneratorAction Fermi motion and Two step Error !!!!!"<<std::endl;
> 	exit(0);
>       }
> 
>       G4ThreeVector vec_sum = G4ThreeVector(0);
>       if( nSpec == 1 ){
> 	fermimom1 = FermiMom_gen(tgtID, nSpec+1);
> 	vec[nFinl]  = fermimom1*RandUnitVec(); // lab frame
> 	vec_sum = vec[nFinl];
> 
> 	if( !particle[nFinl]->GetPDGEncoding()==2112 && !particle[nFinl]->GetPDGEncoding()==2212 ){
> 	  std::cout<<"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"<<std::endl;
> 	  exit(0);
> 	}
>       }
>       else if( nSpec==2 ){
> 	std::cout<<"!!!!! Two step off shell model support only d-target !!!!!"<<std::endl;
> 	exit(0);
>       }
>       // }else if( nSpec == 2 ){
>       // 	static const double scale = 98.7/75.4; // artificial factor
>       // 	while( true ){
>       // 	  fermimom1 = FermiMom_gen(tgtID, nSpec+1);
>       // 	  fermimom2 = FermiMom_gen(tgtID, nSpec+1);
>       // 	  vec[nFinl]   = fermimom1*RandUnitVec(); // lab frame
>       // 	  vec[nFinl+1] = fermimom2*RandUnitVec(); // lab frame
>       // 	  vec_sum = vec[nFinl]+vec[nFinl+1];
>       // 	  if( FermiMom_judge(tgtID, nSpec+1, vec_sum.mag()) ){
>       // 	    fermimom1 *= scale;
>       // 	    fermimom2 *= scale;
>       // 	    vec[nFinl]   *= scale;
>       // 	    vec[nFinl+1] *= scale;
>       // 	    break;
>       // 	  }
>       // 	}
>       // }
> 
>       Init2 = particleTable->FindParticle(cs.InitPdg(2));
>       tgt.setVectM(vec_sum, Init2->GetPDGMass());
> 
>       boost=(beam+tgt).boostVector();
>       G4double CMmass_off = (beam+tgt).m();
>       if( !ManyBody(CMmass_off, nFinl, mass, vec, nFinl, cs.PolSize(), pol, cs.PolMax()) ) goto START;
> 
>       G4ParticleDefinition *reac_par=0;
>       G4ThreeVector reac_mom;
>       G4double reac_mass;
>       int reacID=-1;
>       for( int i=0; i<nFinl; i++ ){
> 	if( particle[i]->GetPDGEncoding()==-321 || particle[i]->GetPDGEncoding()==-311 ){
> 	  //	  std::cout<<particle[i]->GetParticleName()<<std::endl;
> 	  reac_par=particle[i];
> 	  reac_mom=vec[i];	    
> 	  reac_mass=mass[i];
> 	  reacID=i;
> 	}
>       }
>  
>       if( !reac_par ){
> 	std::cout<<"!!!!! reac particle not found !!!!!"<<std::endl;
> 	exit(0);
>       }
> 
>       G4double spec_ene = particleTable->FindParticle(cs.InitPdg(1))->GetPDGMass() - tgt.e();
>       G4LorentzVector spec_lmom=G4LorentzVector(spec_ene,-vec_sum);
>       //      std::cout<<"> K- n mass : "<<(reac_lmom+spec_lmom).m()<<std::endl;
> 
>       G4LorentzVector reac_lmom;
>       reac_lmom.setVectM(reac_mom, reac_mass);
>       reac_lmom.boost(boost);
> 
>       int mode_ts=anaManager->GetTwoStepMode();
>       std::vector<G4ParticleDefinition*> particle_ts;
>       if( mode_ts==20 ){
> 	//	std::cout<<"===== K- n-> pi- L ====="<<std::endl;
> 	particle_ts.push_back(particleTable->FindParticle(-211));
> 	particle_ts.push_back(particleTable->FindParticle(3122));	
>       }
>       else if( mode_ts==21 ){
> 	//	std::cout<<"===== K- n-> pi- S0 ====="<<std::endl;
> 	particle_ts.push_back(particleTable->FindParticle(-211));
> 	particle_ts.push_back(particleTable->FindParticle(3212));	
>       }
>       else if( mode_ts==22 ){
> 	//	std::cout<<"===== K- p-> pi- S+ ====="<<std::endl;
> 	particle_ts.push_back(particleTable->FindParticle(-211));
> 	particle_ts.push_back(particleTable->FindParticle(3222));	
>       }
>       else if( mode_ts==23 ){
> 	//	std::cout<<"===== K- p-> pi+ S- ====="<<std::endl;
> 	particle_ts.push_back(particleTable->FindParticle(211));
> 	particle_ts.push_back(particleTable->FindParticle(3112));	
>       }
>       else{
> 	std::cout<<"!!!!! two step reaction not found !!!!! "<<mode_ts<<std::endl;
> 	exit(0);
>       }
> 
>       G4ThreeVector boost_ts=(reac_lmom+spec_lmom).boostVector();
>       G4double CMmass_ts=(reac_lmom+spec_lmom).m();
>       G4int nBody_ts = particle_ts.size();
>       G4double      mass_ts[3];
>       G4ThreeVector vec_ts[3];
>       G4double sum_ts=0;
> 
>       for( int i=0; i<nBody_ts; i++ ){
> 	mass_ts[i] = GetMass(*particle_ts[i]);
> 	vec_ts[i]  = G4ThreeVector(0,0,0);
> 	sum_ts += mass_ts[i];
>       }
>       if( CMmass_ts<sum_ts ){ goto START; }
>       //      std::cout<<"ts mass : "<<sum_ts<<std::endl;
> 
>       while( true ){
> 	if( ManyBody(CMmass_ts, nBody_ts, mass_ts, vec_ts) ) break;
>       }
> 
>       std::vector <G4LorentzVector> finl_ts;
>       for( int i=0; i<nBody_ts; i++ ){
>         G4LorentzVector tmp;
>         tmp.setVectM(vec_ts[i], mass_ts[i]);
>         tmp.boost(boost_ts);
> 	tmp.boost(-boost);
>         finl_ts.push_back(tmp);
>       }
> 
>       vec[reacID]      = finl_ts[0].vect();
>       mass[reacID]     = mass_ts[0];
>       particle[reacID] = particle_ts[0];
>       for( int i=0; i<nBody_ts-1; i++ ){
>         vec[nFinl+i]      = finl_ts[i+1].vect();
>         mass[nFinl+i]     = mass_ts[i+1];
>         particle[nFinl+i] = particle_ts[i+1];
>       }
> 
>       nSpec--;
>       nFinl = nFinl-1+nBody_ts;
683c867
<   if( anaManager->GetTwoStep() && cs.SpecPdgSize() ){
---
>   if( anaManager->GetTwoStep()>0 && cs.SpecPdgSize() && FermiMode!=2 ){
684a869
>     //    std::cout<<"===== Two step mode : "<<mode_ts<<"  fermi mom : "<<FermiMode<<std::endl;
709a895,905
>     } else if( mode_ts==10 ){ // K-/0 N elastic
>       in1_pdg_cand.push_back(-311); // K0bar
>       in1_pdg_cand.push_back(-321); // K-
>     } // Add by Inoue
>     else if( mode_ts==20 || mode_ts==21 || mode_ts==22 || mode_ts==23 ){
>       in1_pdg_cand.push_back(-311); // K0bar
>       in1_pdg_cand.push_back(-321); // K-
>     }
>     else{
>       std::cout<<"!!!!! unknown two step mode !!!!! "<<mode_ts<<std::endl;
>       exit(0);
753c949
<       else if( mode_ts==1 || mode_ts==2 ){
---
>       else if( mode_ts==1 || mode_ts==2 || mode_ts==10 ){
764a961,984
>       else if( mode_ts==20 ){
> 	//	std::cout<<"===== K- n-> pi- L ====="<<std::endl;
> 	particle_ts.push_back(particleTable->FindParticle(-211));
> 	particle_ts.push_back(particleTable->FindParticle(3122));	
>       }
>       else if( mode_ts==21 ){
> 	//	std::cout<<"===== K- n-> pi- S0 ====="<<std::endl;
> 	particle_ts.push_back(particleTable->FindParticle(-211));
> 	particle_ts.push_back(particleTable->FindParticle(3212));	
>       }
>       else if( mode_ts==22 ){
> 	//	std::cout<<"===== K- p-> pi- S+ ====="<<std::endl;
> 	particle_ts.push_back(particleTable->FindParticle(-211));
> 	particle_ts.push_back(particleTable->FindParticle(3222));	
>       }
>       else if( mode_ts==23 ){
> 	//	std::cout<<"===== K- p-> pi+ S- ====="<<std::endl;
> 	particle_ts.push_back(particleTable->FindParticle(211));
> 	particle_ts.push_back(particleTable->FindParticle(3112));	
>       }
>       else{
> 	std::cout<<"!!!!! unknown two step mode !!!!! Broken "<<mode_ts<<"       Broken"<<std::endl;
> 	exit(0);
>       }
812a1033
>       //      std::cout<<" Two step mode : "<<mode_ts<<std::endl;
871a1093
>   G4LorentzVector sum_lmom(0, 0, 0, 0);
878a1101,1103
>     //    std::cout<<"particle : "<<particle[i]->GetParticleName()<<std::endl;
>     //    G4cout<<"   lmom : "<<tmp<<G4endl;
>     sum_lmom+=tmp;
879a1105,1107
>   //  G4cout<<" finl mom : "<<sum_lmom.vect()<<G4endl;
>   //  G4cout<<" beam mom : "<<beam.vect()<<G4endl;
> 
886a1115
>   //  std::cout<<"ReactionData::InitPDGSize : "<<reactionData->InitPDGSize()<<std::endl;
987a1217,1236
>   //  std::cout<<"pid: "<<pid<<std::endl;
>   G4ParticleTable *pTable = G4ParticleTable::GetParticleTable();
>   G4double th = 0;
>   if( pid==9999 ) // Kpp
>     th = anaManager->GetKppMassThreshold();
>   else if( pid==113 ) // rho0
>     th = pTable->FindParticle("pi+")->GetPDGMass() + pTable->FindParticle("pi-")->GetPDGMass();
>   else if( pid==2214 || pid==2114 || pid==1114 ) // Delta
>     th = pTable->FindParticle("neutron")->GetPDGMass() + pTable->FindParticle("pi+")->GetPDGMass();
>   else if( pid==3224 || pid==3214 || pid==3114 ) // Sigma(1385)
>     th = pTable->FindParticle("sigma-")->GetPDGMass() + pTable->FindParticle("pi+")->GetPDGMass();
>   else if( pid==13122 ) // Lambda(1405)
>     th = pTable->FindParticle("sigma-")->GetPDGMass() + pTable->FindParticle("pi+")->GetPDGMass();
>   else if( pid==3124 ) // Lambda(1520)
>     th = pTable->FindParticle("neutron")->GetPDGMass() + pTable->FindParticle("anti_kaon0")->GetPDGMass();
>   else if( pid==13124 ) // Lambda(1690)
>     th = pTable->FindParticle("neutron")->GetPDGMass() + pTable->FindParticle("anti_kaon0")->GetPDGMass();
>   else if( abs(pid)==313 || abs(pid)==323 ) // K*
>     th = pTable->FindParticle("anti_kaon0")->GetPDGMass() + pTable->FindParticle("pi-")->GetPDGMass();
> 
990,991c1239
<   }else if( pid==9999 && anaManager->GetKppShape() ){ // Kpp
<     G4double th = anaManager->GetKppMassThreshold();
---
>   }else if( anaManager->GetKppShape() && pid==9999 ){ // Kpp
995a1244,1252
>   }
>   else if( pid==13122 && anaManager->GetKppShape() ){
>     G4double dmass = anaManager->GetKppMassSpectrum()->GetRandom()*1000;
>     //    std::cout<<"L(1405) mass : "<<dmass<<std::endl;
>     return dmass;
>   }else if( pid==3114 && anaManager->GetKppShape() ){
>     G4double dmass = anaManager->GetKppMassSpectrum()->GetRandom()*1000;
>     //    std::cout<<"S(1385)- mass : "<<dmass<<std::endl;
>     return dmass;
997,1014d1253
<     G4ParticleTable *pTable = G4ParticleTable::GetParticleTable();
<     G4double th = 0;
<     if( pid==9999 ) // Kpp
<       th = anaManager->GetKppMassThreshold();
<     else if( pid==113 ) // rho0
<       th = pTable->FindParticle("pi+")->GetPDGMass() + pTable->FindParticle("pi-")->GetPDGMass();
<     else if( pid==2214 || pid==2114 || pid==1114 ) // Delta
<       th = pTable->FindParticle("neutron")->GetPDGMass() + pTable->FindParticle("pi+")->GetPDGMass();
<     else if( pid==3224 || pid==3214 || pid==3114 ) // Sigma(1385)
<       th = pTable->FindParticle("sigma-")->GetPDGMass() + pTable->FindParticle("pi+")->GetPDGMass();
<     else if( pid==13122 ) // Lambda(1405)
<       th = pTable->FindParticle("sigma-")->GetPDGMass() + pTable->FindParticle("pi+")->GetPDGMass();
<     else if( pid==3124 ) // Lambda(1520)
<       th = pTable->FindParticle("neutron")->GetPDGMass() + pTable->FindParticle("anti_kaon0")->GetPDGMass();
<     else if( pid==13124 ) // Lambda(1690)
<       th = pTable->FindParticle("neutron")->GetPDGMass() + pTable->FindParticle("anti_kaon0")->GetPDGMass();
<     else if( abs(pid)==313 || abs(pid)==323 ) // K*
<       th = pTable->FindParticle("anti_kaon0")->GetPDGMass() + pTable->FindParticle("pi-")->GetPDGMass();
