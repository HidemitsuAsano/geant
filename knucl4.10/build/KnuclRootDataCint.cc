//
// File generated by rootcint at Tue Aug 14 15:53:11 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME KnuclRootDataCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "KnuclRootDataCint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void CrossSection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CrossSection(void *p = 0);
   static void *newArray_CrossSection(Long_t size, void *p);
   static void delete_CrossSection(void *p);
   static void deleteArray_CrossSection(void *p);
   static void destruct_CrossSection(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CrossSection*)
   {
      ::CrossSection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CrossSection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CrossSection", ::CrossSection::Class_Version(), "/home/had/hiasano/ana/geant/knucl4.10/include/ComCrossSectionTable.hh", 25,
                  typeid(::CrossSection), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CrossSection::Dictionary, isa_proxy, 4,
                  sizeof(::CrossSection) );
      instance.SetNew(&new_CrossSection);
      instance.SetNewArray(&newArray_CrossSection);
      instance.SetDelete(&delete_CrossSection);
      instance.SetDeleteArray(&deleteArray_CrossSection);
      instance.SetDestructor(&destruct_CrossSection);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CrossSection*)
   {
      return GenerateInitInstanceLocal((::CrossSection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CrossSection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void CrossSectionTable_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CrossSectionTable(void *p = 0);
   static void *newArray_CrossSectionTable(Long_t size, void *p);
   static void delete_CrossSectionTable(void *p);
   static void deleteArray_CrossSectionTable(void *p);
   static void destruct_CrossSectionTable(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CrossSectionTable*)
   {
      ::CrossSectionTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CrossSectionTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CrossSectionTable", ::CrossSectionTable::Class_Version(), "/home/had/hiasano/ana/geant/knucl4.10/include/ComCrossSectionTable.hh", 92,
                  typeid(::CrossSectionTable), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CrossSectionTable::Dictionary, isa_proxy, 4,
                  sizeof(::CrossSectionTable) );
      instance.SetNew(&new_CrossSectionTable);
      instance.SetNewArray(&newArray_CrossSectionTable);
      instance.SetDelete(&delete_CrossSectionTable);
      instance.SetDeleteArray(&deleteArray_CrossSectionTable);
      instance.SetDestructor(&destruct_CrossSectionTable);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CrossSectionTable*)
   {
      return GenerateInitInstanceLocal((::CrossSectionTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CrossSectionTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DetectorHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DetectorHit(void *p = 0);
   static void *newArray_DetectorHit(Long_t size, void *p);
   static void delete_DetectorHit(void *p);
   static void deleteArray_DetectorHit(void *p);
   static void destruct_DetectorHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DetectorHit*)
   {
      ::DetectorHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DetectorHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DetectorHit", ::DetectorHit::Class_Version(), "/home/had/hiasano/ana/geant/knucl4.10/include/KnuclRootData.h", 24,
                  typeid(::DetectorHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DetectorHit::Dictionary, isa_proxy, 4,
                  sizeof(::DetectorHit) );
      instance.SetNew(&new_DetectorHit);
      instance.SetNewArray(&newArray_DetectorHit);
      instance.SetDelete(&delete_DetectorHit);
      instance.SetDeleteArray(&deleteArray_DetectorHit);
      instance.SetDestructor(&destruct_DetectorHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DetectorHit*)
   {
      return GenerateInitInstanceLocal((::DetectorHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DetectorHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void CounterHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CounterHit(void *p = 0);
   static void *newArray_CounterHit(Long_t size, void *p);
   static void delete_CounterHit(void *p);
   static void deleteArray_CounterHit(void *p);
   static void destruct_CounterHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CounterHit*)
   {
      ::CounterHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CounterHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CounterHit", ::CounterHit::Class_Version(), "/home/had/hiasano/ana/geant/knucl4.10/include/KnuclRootData.h", 83,
                  typeid(::CounterHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CounterHit::Dictionary, isa_proxy, 4,
                  sizeof(::CounterHit) );
      instance.SetNew(&new_CounterHit);
      instance.SetNewArray(&newArray_CounterHit);
      instance.SetDelete(&delete_CounterHit);
      instance.SetDeleteArray(&deleteArray_CounterHit);
      instance.SetDestructor(&destruct_CounterHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CounterHit*)
   {
      return GenerateInitInstanceLocal((::CounterHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CounterHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Track_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Track(void *p = 0);
   static void *newArray_Track(Long_t size, void *p);
   static void delete_Track(void *p);
   static void deleteArray_Track(void *p);
   static void destruct_Track(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Track*)
   {
      ::Track *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Track >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Track", ::Track::Class_Version(), "/home/had/hiasano/ana/geant/knucl4.10/include/KnuclRootData.h", 116,
                  typeid(::Track), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Track::Dictionary, isa_proxy, 4,
                  sizeof(::Track) );
      instance.SetNew(&new_Track);
      instance.SetNewArray(&newArray_Track);
      instance.SetDelete(&delete_Track);
      instance.SetDeleteArray(&deleteArray_Track);
      instance.SetDestructor(&destruct_Track);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Track*)
   {
      return GenerateInitInstanceLocal((::Track*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Track*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RunHeaderMC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RunHeaderMC(void *p = 0);
   static void *newArray_RunHeaderMC(Long_t size, void *p);
   static void delete_RunHeaderMC(void *p);
   static void deleteArray_RunHeaderMC(void *p);
   static void destruct_RunHeaderMC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RunHeaderMC*)
   {
      ::RunHeaderMC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RunHeaderMC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RunHeaderMC", ::RunHeaderMC::Class_Version(), "/home/had/hiasano/ana/geant/knucl4.10/include/KnuclRootData.h", 162,
                  typeid(::RunHeaderMC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RunHeaderMC::Dictionary, isa_proxy, 4,
                  sizeof(::RunHeaderMC) );
      instance.SetNew(&new_RunHeaderMC);
      instance.SetNewArray(&newArray_RunHeaderMC);
      instance.SetDelete(&delete_RunHeaderMC);
      instance.SetDeleteArray(&deleteArray_RunHeaderMC);
      instance.SetDestructor(&destruct_RunHeaderMC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RunHeaderMC*)
   {
      return GenerateInitInstanceLocal((::RunHeaderMC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RunHeaderMC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EventHeaderMC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EventHeaderMC(void *p = 0);
   static void *newArray_EventHeaderMC(Long_t size, void *p);
   static void delete_EventHeaderMC(void *p);
   static void deleteArray_EventHeaderMC(void *p);
   static void destruct_EventHeaderMC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EventHeaderMC*)
   {
      ::EventHeaderMC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EventHeaderMC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EventHeaderMC", ::EventHeaderMC::Class_Version(), "/home/had/hiasano/ana/geant/knucl4.10/include/KnuclRootData.h", 197,
                  typeid(::EventHeaderMC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EventHeaderMC::Dictionary, isa_proxy, 4,
                  sizeof(::EventHeaderMC) );
      instance.SetNew(&new_EventHeaderMC);
      instance.SetNewArray(&newArray_EventHeaderMC);
      instance.SetDelete(&delete_EventHeaderMC);
      instance.SetDeleteArray(&deleteArray_EventHeaderMC);
      instance.SetDestructor(&destruct_EventHeaderMC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EventHeaderMC*)
   {
      return GenerateInitInstanceLocal((::EventHeaderMC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EventHeaderMC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DetectorData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DetectorData(void *p = 0);
   static void *newArray_DetectorData(Long_t size, void *p);
   static void delete_DetectorData(void *p);
   static void deleteArray_DetectorData(void *p);
   static void destruct_DetectorData(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DetectorData*)
   {
      ::DetectorData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DetectorData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DetectorData", ::DetectorData::Class_Version(), "/home/had/hiasano/ana/geant/knucl4.10/include/KnuclRootData.h", 217,
                  typeid(::DetectorData), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DetectorData::Dictionary, isa_proxy, 4,
                  sizeof(::DetectorData) );
      instance.SetNew(&new_DetectorData);
      instance.SetNewArray(&newArray_DetectorData);
      instance.SetDelete(&delete_DetectorData);
      instance.SetDeleteArray(&deleteArray_DetectorData);
      instance.SetDestructor(&destruct_DetectorData);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DetectorData*)
   {
      return GenerateInitInstanceLocal((::DetectorData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DetectorData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MCData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MCData(void *p = 0);
   static void *newArray_MCData(Long_t size, void *p);
   static void delete_MCData(void *p);
   static void deleteArray_MCData(void *p);
   static void destruct_MCData(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MCData*)
   {
      ::MCData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MCData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MCData", ::MCData::Class_Version(), "/home/had/hiasano/ana/geant/knucl4.10/include/KnuclRootData.h", 241,
                  typeid(::MCData), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MCData::Dictionary, isa_proxy, 4,
                  sizeof(::MCData) );
      instance.SetNew(&new_MCData);
      instance.SetNewArray(&newArray_MCData);
      instance.SetDelete(&delete_MCData);
      instance.SetDeleteArray(&deleteArray_MCData);
      instance.SetDestructor(&destruct_MCData);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MCData*)
   {
      return GenerateInitInstanceLocal((::MCData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MCData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ReactionData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ReactionData(void *p = 0);
   static void *newArray_ReactionData(Long_t size, void *p);
   static void delete_ReactionData(void *p);
   static void deleteArray_ReactionData(void *p);
   static void destruct_ReactionData(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ReactionData*)
   {
      ::ReactionData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ReactionData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ReactionData", ::ReactionData::Class_Version(), "/home/had/hiasano/ana/geant/knucl4.10/include/KnuclRootData.h", 268,
                  typeid(::ReactionData), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ReactionData::Dictionary, isa_proxy, 4,
                  sizeof(::ReactionData) );
      instance.SetNew(&new_ReactionData);
      instance.SetNewArray(&newArray_ReactionData);
      instance.SetDelete(&delete_ReactionData);
      instance.SetDeleteArray(&deleteArray_ReactionData);
      instance.SetDestructor(&destruct_ReactionData);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ReactionData*)
   {
      return GenerateInitInstanceLocal((::ReactionData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ReactionData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr CrossSection::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CrossSection::Class_Name()
{
   return "CrossSection";
}

//______________________________________________________________________________
const char *CrossSection::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CrossSection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CrossSection::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CrossSection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CrossSection::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CrossSection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CrossSection::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CrossSection*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr CrossSectionTable::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CrossSectionTable::Class_Name()
{
   return "CrossSectionTable";
}

//______________________________________________________________________________
const char *CrossSectionTable::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CrossSectionTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CrossSectionTable::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CrossSectionTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CrossSectionTable::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CrossSectionTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CrossSectionTable::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CrossSectionTable*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DetectorHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DetectorHit::Class_Name()
{
   return "DetectorHit";
}

//______________________________________________________________________________
const char *DetectorHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DetectorHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DetectorHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DetectorHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DetectorHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DetectorHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DetectorHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DetectorHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr CounterHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CounterHit::Class_Name()
{
   return "CounterHit";
}

//______________________________________________________________________________
const char *CounterHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CounterHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CounterHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CounterHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CounterHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CounterHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CounterHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CounterHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Track::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Track::Class_Name()
{
   return "Track";
}

//______________________________________________________________________________
const char *Track::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Track*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Track::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Track*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Track::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Track*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Track::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Track*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RunHeaderMC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RunHeaderMC::Class_Name()
{
   return "RunHeaderMC";
}

//______________________________________________________________________________
const char *RunHeaderMC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RunHeaderMC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RunHeaderMC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RunHeaderMC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RunHeaderMC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RunHeaderMC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RunHeaderMC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RunHeaderMC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EventHeaderMC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EventHeaderMC::Class_Name()
{
   return "EventHeaderMC";
}

//______________________________________________________________________________
const char *EventHeaderMC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EventHeaderMC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventHeaderMC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EventHeaderMC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventHeaderMC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EventHeaderMC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventHeaderMC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EventHeaderMC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DetectorData::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DetectorData::Class_Name()
{
   return "DetectorData";
}

//______________________________________________________________________________
const char *DetectorData::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DetectorData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DetectorData::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DetectorData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DetectorData::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DetectorData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DetectorData::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DetectorData*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MCData::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MCData::Class_Name()
{
   return "MCData";
}

//______________________________________________________________________________
const char *MCData::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MCData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCData::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MCData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCData::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MCData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCData::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MCData*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ReactionData::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ReactionData::Class_Name()
{
   return "ReactionData";
}

//______________________________________________________________________________
const char *ReactionData::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ReactionData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ReactionData::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ReactionData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ReactionData::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ReactionData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ReactionData::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ReactionData*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void DetectorHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class DetectorHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DetectorHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(DetectorHit::Class(),this);
   }
}

//______________________________________________________________________________
void DetectorHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DetectorHit.
      TClass *R__cl = ::DetectorHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHitID", &nHitID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nDetectorID", &nDetectorID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nLayerID", &nLayerID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nChannelID", &nChannelID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dAdc", &dAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dTdc", &dTdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tPos", &tPos);
      R__insp.InspectMember(tPos, "tPos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tMomentum", &tMomentum);
      R__insp.InspectMember(tMomentum, "tMomentum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTrackID", &nTrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dTime", &dTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dDe", &dDe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dDt", &dDt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dDx", &dDx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPDG", &nPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nParentID", &nParentID);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DetectorHit(void *p) {
      return  p ? new(p) ::DetectorHit : new ::DetectorHit;
   }
   static void *newArray_DetectorHit(Long_t nElements, void *p) {
      return p ? new(p) ::DetectorHit[nElements] : new ::DetectorHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_DetectorHit(void *p) {
      delete ((::DetectorHit*)p);
   }
   static void deleteArray_DetectorHit(void *p) {
      delete [] ((::DetectorHit*)p);
   }
   static void destruct_DetectorHit(void *p) {
      typedef ::DetectorHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DetectorHit

//______________________________________________________________________________
void CounterHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class CounterHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CounterHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(CounterHit::Class(),this);
   }
}

//______________________________________________________________________________
void CounterHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CounterHit.
      TClass *R__cl = ::CounterHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_charge", &t_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_time", &t_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_track_id", &t_track_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_pid", &t_pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_pos", &t_pos);
      R__insp.InspectMember(t_pos, "t_pos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hit_particle[20]", hit_particle);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CounterHit(void *p) {
      return  p ? new(p) ::CounterHit : new ::CounterHit;
   }
   static void *newArray_CounterHit(Long_t nElements, void *p) {
      return p ? new(p) ::CounterHit[nElements] : new ::CounterHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_CounterHit(void *p) {
      delete ((::CounterHit*)p);
   }
   static void deleteArray_CounterHit(void *p) {
      delete [] ((::CounterHit*)p);
   }
   static void destruct_CounterHit(void *p) {
      typedef ::CounterHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CounterHit

//______________________________________________________________________________
void Track::Streamer(TBuffer &R__b)
{
   // Stream an object of class Track.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Track::Class(),this);
   } else {
      R__b.WriteClassBuffer(Track::Class(),this);
   }
}

//______________________________________________________________________________
void Track::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Track.
      TClass *R__cl = ::Track::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTrackID", &nTrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nParentTrackID", &nParentTrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPdgID", &nPdgID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tVertex", &tVertex);
      R__insp.InspectMember(tVertex, "tVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tMomentum", &tMomentum);
      R__insp.InspectMember(tMomentum, "tMomentum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFlightLength", &fFlightLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vnDetectorHitLink", (void*)&vnDetectorHitLink);
      R__insp.InspectMember("vector<Int_t>", (void*)&vnDetectorHitLink, "vnDetectorHitLink.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Track(void *p) {
      return  p ? new(p) ::Track : new ::Track;
   }
   static void *newArray_Track(Long_t nElements, void *p) {
      return p ? new(p) ::Track[nElements] : new ::Track[nElements];
   }
   // Wrapper around operator delete
   static void delete_Track(void *p) {
      delete ((::Track*)p);
   }
   static void deleteArray_Track(void *p) {
      delete [] ((::Track*)p);
   }
   static void destruct_Track(void *p) {
      typedef ::Track current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Track

//______________________________________________________________________________
void CrossSection::Streamer(TBuffer &R__b)
{
   // Stream an object of class CrossSection.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CrossSection::Class(),this);
   } else {
      R__b.WriteClassBuffer(CrossSection::Class(),this);
   }
}

//______________________________________________________________________________
void CrossSection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CrossSection.
      TClass *R__cl = ::CrossSection::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fId", &fId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCs", &fCs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCsFactor", &fCsFactor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInitMom", &fInitMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInitPdg", (void*)&fInitPdg);
      R__insp.InspectMember("vector<int>", (void*)&fInitPdg, "fInitPdg.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFinlPdg", (void*)&fFinlPdg);
      R__insp.InspectMember("vector<int>", (void*)&fFinlPdg, "fFinlPdg.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSpecPdg", (void*)&fSpecPdg);
      R__insp.InspectMember("vector<int>", (void*)&fSpecPdg, "fSpecPdg.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPol", (void*)&fPol);
      R__insp.InspectMember("vector<double>", (void*)&fPol, "fPol.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPolMax", &fPolMax);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CrossSection(void *p) {
      return  p ? new(p) ::CrossSection : new ::CrossSection;
   }
   static void *newArray_CrossSection(Long_t nElements, void *p) {
      return p ? new(p) ::CrossSection[nElements] : new ::CrossSection[nElements];
   }
   // Wrapper around operator delete
   static void delete_CrossSection(void *p) {
      delete ((::CrossSection*)p);
   }
   static void deleteArray_CrossSection(void *p) {
      delete [] ((::CrossSection*)p);
   }
   static void destruct_CrossSection(void *p) {
      typedef ::CrossSection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CrossSection

//______________________________________________________________________________
void CrossSectionTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class CrossSectionTable.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CrossSectionTable::Class(),this);
   } else {
      R__b.WriteClassBuffer(CrossSectionTable::Class(),this);
   }
}

//______________________________________________________________________________
void CrossSectionTable::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CrossSectionTable.
      TClass *R__cl = ::CrossSectionTable::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCS", (void*)&fCS);
      R__insp.InspectMember("vector<CrossSection>", (void*)&fCS, "fCS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalCS", &fTotalCS);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CrossSectionTable(void *p) {
      return  p ? new(p) ::CrossSectionTable : new ::CrossSectionTable;
   }
   static void *newArray_CrossSectionTable(Long_t nElements, void *p) {
      return p ? new(p) ::CrossSectionTable[nElements] : new ::CrossSectionTable[nElements];
   }
   // Wrapper around operator delete
   static void delete_CrossSectionTable(void *p) {
      delete ((::CrossSectionTable*)p);
   }
   static void deleteArray_CrossSectionTable(void *p) {
      delete [] ((::CrossSectionTable*)p);
   }
   static void destruct_CrossSectionTable(void *p) {
      typedef ::CrossSectionTable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CrossSectionTable

//______________________________________________________________________________
void RunHeaderMC::Streamer(TBuffer &R__b)
{
   // Stream an object of class RunHeaderMC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RunHeaderMC::Class(),this);
   } else {
      R__b.WriteClassBuffer(RunHeaderMC::Class(),this);
   }
}

//______________________________________________________________________________
void RunHeaderMC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RunHeaderMC.
      TClass *R__cl = ::RunHeaderMC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nSeed", &nSeed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nNumEvent", &nNumEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nNumGenerated", &nNumGenerated);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vnCounterList", (void*)&vnCounterList);
      R__insp.InspectMember("vector<Int_t>", (void*)&vnCounterList, "vnCounterList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCStable", &fCStable);
      R__insp.InspectMember(fCStable, "fCStable.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RunHeaderMC(void *p) {
      return  p ? new(p) ::RunHeaderMC : new ::RunHeaderMC;
   }
   static void *newArray_RunHeaderMC(Long_t nElements, void *p) {
      return p ? new(p) ::RunHeaderMC[nElements] : new ::RunHeaderMC[nElements];
   }
   // Wrapper around operator delete
   static void delete_RunHeaderMC(void *p) {
      delete ((::RunHeaderMC*)p);
   }
   static void deleteArray_RunHeaderMC(void *p) {
      delete [] ((::RunHeaderMC*)p);
   }
   static void destruct_RunHeaderMC(void *p) {
      typedef ::RunHeaderMC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RunHeaderMC

//______________________________________________________________________________
void EventHeaderMC::Streamer(TBuffer &R__b)
{
   // Stream an object of class EventHeaderMC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EventHeaderMC::Class(),this);
   } else {
      R__b.WriteClassBuffer(EventHeaderMC::Class(),this);
   }
}

//______________________________________________________________________________
void EventHeaderMC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EventHeaderMC.
      TClass *R__cl = ::EventHeaderMC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEventID", &nEventID);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EventHeaderMC(void *p) {
      return  p ? new(p) ::EventHeaderMC : new ::EventHeaderMC;
   }
   static void *newArray_EventHeaderMC(Long_t nElements, void *p) {
      return p ? new(p) ::EventHeaderMC[nElements] : new ::EventHeaderMC[nElements];
   }
   // Wrapper around operator delete
   static void delete_EventHeaderMC(void *p) {
      delete ((::EventHeaderMC*)p);
   }
   static void deleteArray_EventHeaderMC(void *p) {
      delete [] ((::EventHeaderMC*)p);
   }
   static void destruct_EventHeaderMC(void *p) {
      typedef ::EventHeaderMC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::EventHeaderMC

//______________________________________________________________________________
void DetectorData::Streamer(TBuffer &R__b)
{
   // Stream an object of class DetectorData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DetectorData::Class(),this);
   } else {
      R__b.WriteClassBuffer(DetectorData::Class(),this);
   }
}

//______________________________________________________________________________
void DetectorData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DetectorData.
      TClass *R__cl = ::DetectorData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vcDetectorHit", (void*)&vcDetectorHit);
      R__insp.InspectMember("vector<DetectorHit>", (void*)&vcDetectorHit, "vcDetectorHit.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DetectorData(void *p) {
      return  p ? new(p) ::DetectorData : new ::DetectorData;
   }
   static void *newArray_DetectorData(Long_t nElements, void *p) {
      return p ? new(p) ::DetectorData[nElements] : new ::DetectorData[nElements];
   }
   // Wrapper around operator delete
   static void delete_DetectorData(void *p) {
      delete ((::DetectorData*)p);
   }
   static void deleteArray_DetectorData(void *p) {
      delete [] ((::DetectorData*)p);
   }
   static void destruct_DetectorData(void *p) {
      typedef ::DetectorData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DetectorData

//______________________________________________________________________________
void MCData::Streamer(TBuffer &R__b)
{
   // Stream an object of class MCData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MCData::Class(),this);
   } else {
      R__b.WriteClassBuffer(MCData::Class(),this);
   }
}

//______________________________________________________________________________
void MCData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MCData.
      TClass *R__cl = ::MCData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vcTrack", (void*)&vcTrack);
      R__insp.InspectMember("vector<Track>", (void*)&vcTrack, "vcTrack.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MCData(void *p) {
      return  p ? new(p) ::MCData : new ::MCData;
   }
   static void *newArray_MCData(Long_t nElements, void *p) {
      return p ? new(p) ::MCData[nElements] : new ::MCData[nElements];
   }
   // Wrapper around operator delete
   static void delete_MCData(void *p) {
      delete ((::MCData*)p);
   }
   static void deleteArray_MCData(void *p) {
      delete [] ((::MCData*)p);
   }
   static void destruct_MCData(void *p) {
      typedef ::MCData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MCData

//______________________________________________________________________________
void ReactionData::Streamer(TBuffer &R__b)
{
   // Stream an object of class ReactionData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ReactionData::Class(),this);
   } else {
      R__b.WriteClassBuffer(ReactionData::Class(),this);
   }
}

//______________________________________________________________________________
void ReactionData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ReactionData.
      TClass *R__cl = ::ReactionData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCMOutParticleContainer", (void*)&fCMOutParticleContainer);
      R__insp.InspectMember("ReactionData::TLorentzVectorContainer", (void*)&fCMOutParticleContainer, "fCMOutParticleContainer.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutParticleContainer", (void*)&fOutParticleContainer);
      R__insp.InspectMember("ReactionData::TLorentzVectorContainer", (void*)&fOutParticleContainer, "fOutParticleContainer.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInitParticleContainer", (void*)&fInitParticleContainer);
      R__insp.InspectMember("ReactionData::TLorentzVectorContainer", (void*)&fInitParticleContainer, "fInitParticleContainer.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReactionID", &fReactionID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPDG", (void*)&fPDG);
      R__insp.InspectMember("vector<int>", (void*)&fPDG, "fPDG.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInitPDG", (void*)&fInitPDG);
      R__insp.InspectMember("vector<int>", (void*)&fInitPDG, "fInitPDG.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNParticle[2]", fNParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFermiMom[2]", fFermiMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTmpVal[8]", fTmpVal);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ReactionData(void *p) {
      return  p ? new(p) ::ReactionData : new ::ReactionData;
   }
   static void *newArray_ReactionData(Long_t nElements, void *p) {
      return p ? new(p) ::ReactionData[nElements] : new ::ReactionData[nElements];
   }
   // Wrapper around operator delete
   static void delete_ReactionData(void *p) {
      delete ((::ReactionData*)p);
   }
   static void deleteArray_ReactionData(void *p) {
      delete [] ((::ReactionData*)p);
   }
   static void destruct_ReactionData(void *p) {
      typedef ::ReactionData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ReactionData

namespace ROOTDict {
   void vectorlECrossSectiongR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlECrossSectiongR_Dictionary();
   static void *new_vectorlECrossSectiongR(void *p = 0);
   static void *newArray_vectorlECrossSectiongR(Long_t size, void *p);
   static void delete_vectorlECrossSectiongR(void *p);
   static void deleteArray_vectorlECrossSectiongR(void *p);
   static void destruct_vectorlECrossSectiongR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<CrossSection>*)
   {
      vector<CrossSection> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<CrossSection>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<CrossSection>", -2, "prec_stl/vector", 49,
                  typeid(vector<CrossSection>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlECrossSectiongR_Dictionary, isa_proxy, 0,
                  sizeof(vector<CrossSection>) );
      instance.SetNew(&new_vectorlECrossSectiongR);
      instance.SetNewArray(&newArray_vectorlECrossSectiongR);
      instance.SetDelete(&delete_vectorlECrossSectiongR);
      instance.SetDeleteArray(&deleteArray_vectorlECrossSectiongR);
      instance.SetDestructor(&destruct_vectorlECrossSectiongR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<CrossSection> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<CrossSection>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlECrossSectiongR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<CrossSection>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlECrossSectiongR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CrossSection> : new vector<CrossSection>;
   }
   static void *newArray_vectorlECrossSectiongR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CrossSection>[nElements] : new vector<CrossSection>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlECrossSectiongR(void *p) {
      delete ((vector<CrossSection>*)p);
   }
   static void deleteArray_vectorlECrossSectiongR(void *p) {
      delete [] ((vector<CrossSection>*)p);
   }
   static void destruct_vectorlECrossSectiongR(void *p) {
      typedef vector<CrossSection> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<CrossSection>

namespace ROOTDict {
   void vectorlEDetectorHitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEDetectorHitgR_Dictionary();
   static void *new_vectorlEDetectorHitgR(void *p = 0);
   static void *newArray_vectorlEDetectorHitgR(Long_t size, void *p);
   static void delete_vectorlEDetectorHitgR(void *p);
   static void deleteArray_vectorlEDetectorHitgR(void *p);
   static void destruct_vectorlEDetectorHitgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<DetectorHit>*)
   {
      vector<DetectorHit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<DetectorHit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<DetectorHit>", -2, "prec_stl/vector", 49,
                  typeid(vector<DetectorHit>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEDetectorHitgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<DetectorHit>) );
      instance.SetNew(&new_vectorlEDetectorHitgR);
      instance.SetNewArray(&newArray_vectorlEDetectorHitgR);
      instance.SetDelete(&delete_vectorlEDetectorHitgR);
      instance.SetDeleteArray(&deleteArray_vectorlEDetectorHitgR);
      instance.SetDestructor(&destruct_vectorlEDetectorHitgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<DetectorHit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<DetectorHit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEDetectorHitgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<DetectorHit>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEDetectorHitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DetectorHit> : new vector<DetectorHit>;
   }
   static void *newArray_vectorlEDetectorHitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DetectorHit>[nElements] : new vector<DetectorHit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEDetectorHitgR(void *p) {
      delete ((vector<DetectorHit>*)p);
   }
   static void deleteArray_vectorlEDetectorHitgR(void *p) {
      delete [] ((vector<DetectorHit>*)p);
   }
   static void destruct_vectorlEDetectorHitgR(void *p) {
      typedef vector<DetectorHit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<DetectorHit>

namespace ROOTDict {
   void vectorlETLorentzVectorgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETLorentzVectorgR_Dictionary();
   static void *new_vectorlETLorentzVectorgR(void *p = 0);
   static void *newArray_vectorlETLorentzVectorgR(Long_t size, void *p);
   static void delete_vectorlETLorentzVectorgR(void *p);
   static void deleteArray_vectorlETLorentzVectorgR(void *p);
   static void destruct_vectorlETLorentzVectorgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TLorentzVector>*)
   {
      vector<TLorentzVector> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TLorentzVector>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TLorentzVector>", -2, "prec_stl/vector", 49,
                  typeid(vector<TLorentzVector>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETLorentzVectorgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TLorentzVector>) );
      instance.SetNew(&new_vectorlETLorentzVectorgR);
      instance.SetNewArray(&newArray_vectorlETLorentzVectorgR);
      instance.SetDelete(&delete_vectorlETLorentzVectorgR);
      instance.SetDeleteArray(&deleteArray_vectorlETLorentzVectorgR);
      instance.SetDestructor(&destruct_vectorlETLorentzVectorgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TLorentzVector> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TLorentzVector>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETLorentzVectorgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TLorentzVector>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETLorentzVectorgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TLorentzVector> : new vector<TLorentzVector>;
   }
   static void *newArray_vectorlETLorentzVectorgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TLorentzVector>[nElements] : new vector<TLorentzVector>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETLorentzVectorgR(void *p) {
      delete ((vector<TLorentzVector>*)p);
   }
   static void deleteArray_vectorlETLorentzVectorgR(void *p) {
      delete [] ((vector<TLorentzVector>*)p);
   }
   static void destruct_vectorlETLorentzVectorgR(void *p) {
      typedef vector<TLorentzVector> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TLorentzVector>

namespace ROOTDict {
   void vectorlETrackgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETrackgR_Dictionary();
   static void *new_vectorlETrackgR(void *p = 0);
   static void *newArray_vectorlETrackgR(Long_t size, void *p);
   static void delete_vectorlETrackgR(void *p);
   static void deleteArray_vectorlETrackgR(void *p);
   static void destruct_vectorlETrackgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Track>*)
   {
      vector<Track> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Track>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Track>", -2, "prec_stl/vector", 49,
                  typeid(vector<Track>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETrackgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Track>) );
      instance.SetNew(&new_vectorlETrackgR);
      instance.SetNewArray(&newArray_vectorlETrackgR);
      instance.SetDelete(&delete_vectorlETrackgR);
      instance.SetDeleteArray(&deleteArray_vectorlETrackgR);
      instance.SetDestructor(&destruct_vectorlETrackgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Track> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Track>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETrackgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Track>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETrackgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Track> : new vector<Track>;
   }
   static void *newArray_vectorlETrackgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Track>[nElements] : new vector<Track>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETrackgR(void *p) {
      delete ((vector<Track>*)p);
   }
   static void deleteArray_vectorlETrackgR(void *p) {
      delete [] ((vector<Track>*)p);
   }
   static void destruct_vectorlETrackgR(void *p) {
      typedef vector<Track> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Track>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

/********************************************************
* KnuclRootDataCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableKnuclRootDataCint();

extern "C" void G__set_cpp_environmentKnuclRootDataCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/home/had/hiasano/ana/geant/knucl4.10/include/KnuclRootData.h");
  G__add_compiledheader("/home/had/hiasano/ana/geant/knucl4.10/include/ComCrossSectionTable.hh");
  G__cpp_reset_tagtableKnuclRootDataCint();
}
#include <new>
extern "C" int G__cpp_dllrevKnuclRootDataCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* CrossSection */
static int G__KnuclRootDataCint_249_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CrossSection* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CrossSection[n];
     } else {
       p = new((void*) gvp) CrossSection[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CrossSection;
     } else {
       p = new((void*) gvp) CrossSection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CrossSection*) G__getstructoffset())->Init((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CrossSection*) G__getstructoffset())->SetId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CrossSection*) G__getstructoffset())->SetCs((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CrossSection*) G__getstructoffset())->SetCsFactor((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CrossSection*) G__getstructoffset())->SetInitMom((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CrossSection*) G__getstructoffset())->SetInitPdg(*(vector<int>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CrossSection*) G__getstructoffset())->SetFinlPdg(*(vector<int>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CrossSection*) G__getstructoffset())->SetSpecPdg(*(vector<int>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CrossSection*) G__getstructoffset())->SetPol(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CrossSection*) G__getstructoffset())->SetPolMax((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CrossSection*) G__getstructoffset())->Id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CrossSection*) G__getstructoffset())->Cs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CrossSection*) G__getstructoffset())->CsFactor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CrossSection*) G__getstructoffset())->InitMom());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CrossSection*) G__getstructoffset())->InitPdgSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CrossSection*) G__getstructoffset())->FinlPdgSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CrossSection*) G__getstructoffset())->SpecPdgSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>& obj = ((CrossSection*) G__getstructoffset())->InitPdg();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>& obj = ((CrossSection*) G__getstructoffset())->FinlPdg();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>& obj = ((CrossSection*) G__getstructoffset())->SpecPdg();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CrossSection*) G__getstructoffset())->InitPdg((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CrossSection*) G__getstructoffset())->FinlPdg((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CrossSection*) G__getstructoffset())->SpecPdg((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CrossSection*) G__getstructoffset())->PolSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>& obj = ((CrossSection*) G__getstructoffset())->Pol();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CrossSection*) G__getstructoffset())->Pol((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CrossSection*) G__getstructoffset())->PolMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CrossSection*) G__getstructoffset())->PrintCS();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CrossSection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CrossSection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CrossSection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CrossSection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CrossSection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CrossSection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CrossSection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CrossSection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_249_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CrossSection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__KnuclRootDataCint_249_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CrossSection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CrossSection(*(CrossSection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CrossSection G__TCrossSection;
static int G__KnuclRootDataCint_249_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CrossSection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CrossSection*) (soff+(sizeof(CrossSection)*i)))->~G__TCrossSection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CrossSection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CrossSection*) (soff))->~G__TCrossSection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__KnuclRootDataCint_249_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CrossSection* dest = (CrossSection*) G__getstructoffset();
   *dest = *(CrossSection*) libp->para[0].ref;
   const CrossSection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CrossSectionTable */
static int G__KnuclRootDataCint_253_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CrossSectionTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CrossSectionTable[n];
     } else {
       p = new((void*) gvp) CrossSectionTable[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CrossSectionTable;
     } else {
       p = new((void*) gvp) CrossSectionTable;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSectionTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CrossSectionTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CrossSectionTable((const char*) G__int(libp->para[0]), (double) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) CrossSectionTable((const char*) G__int(libp->para[0]), (double) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSectionTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CrossSectionTable*) G__getstructoffset())->SetCS(*(CrossSection*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CrossSectionTable*) G__getstructoffset())->CSSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<CrossSection>& obj = ((CrossSectionTable*) G__getstructoffset())->CS();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CrossSection& obj = ((CrossSectionTable*) G__getstructoffset())->CS((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CrossSectionTable*) G__getstructoffset())->TotalCS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CrossSectionTable*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CrossSectionTable*) G__getstructoffset())->CheckCSList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CrossSectionTable*) G__getstructoffset())->CalcTotalCS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CrossSectionTable*) G__getstructoffset())->PrintAllCS();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CrossSectionTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CrossSectionTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CrossSectionTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CrossSectionTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CrossSectionTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CrossSectionTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CrossSectionTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CrossSectionTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_253_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CrossSectionTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__KnuclRootDataCint_253_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CrossSectionTable* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CrossSectionTable(*(CrossSectionTable*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSectionTable));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CrossSectionTable G__TCrossSectionTable;
static int G__KnuclRootDataCint_253_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CrossSectionTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CrossSectionTable*) (soff+(sizeof(CrossSectionTable)*i)))->~G__TCrossSectionTable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CrossSectionTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CrossSectionTable*) (soff))->~G__TCrossSectionTable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__KnuclRootDataCint_253_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CrossSectionTable* dest = (CrossSectionTable*) G__getstructoffset();
   *dest = *(CrossSectionTable*) libp->para[0].ref;
   const CrossSectionTable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DetectorHit */
static int G__KnuclRootDataCint_258_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DetectorHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DetectorHit[n];
     } else {
       p = new((void*) gvp) DetectorHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DetectorHit;
     } else {
       p = new((void*) gvp) DetectorHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorHit*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorHit*) G__getstructoffset())->setHitID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorHit*) G__getstructoffset())->setDetectorID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorHit*) G__getstructoffset())->setLayerID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorHit*) G__getstructoffset())->setChannelID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorHit*) G__getstructoffset())->setAdc((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorHit*) G__getstructoffset())->setTdc((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorHit*) G__getstructoffset())->setPos(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorHit*) G__getstructoffset())->setMomentum(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorHit*) G__getstructoffset())->setTrackID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorHit*) G__getstructoffset())->setTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorHit*) G__getstructoffset())->setDe((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorHit*) G__getstructoffset())->setDt((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorHit*) G__getstructoffset())->setDx((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorHit*) G__getstructoffset())->setPDG((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorHit*) G__getstructoffset())->setParentID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const DetectorHit*) G__getstructoffset())->hitID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const DetectorHit*) G__getstructoffset())->detectorID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const DetectorHit*) G__getstructoffset())->layerID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const DetectorHit*) G__getstructoffset())->channelID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const DetectorHit*) G__getstructoffset())->adc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const DetectorHit*) G__getstructoffset())->tdc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const DetectorHit*) G__getstructoffset())->pos();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const DetectorHit*) G__getstructoffset())->momentum();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const DetectorHit*) G__getstructoffset())->trackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const DetectorHit*) G__getstructoffset())->time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const DetectorHit*) G__getstructoffset())->de());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const DetectorHit*) G__getstructoffset())->dt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const DetectorHit*) G__getstructoffset())->dx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const DetectorHit*) G__getstructoffset())->pdg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const DetectorHit*) G__getstructoffset())->parentID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DetectorHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DetectorHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DetectorHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DetectorHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DetectorHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DetectorHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DetectorHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_258_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DetectorHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__KnuclRootDataCint_258_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DetectorHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DetectorHit(*(DetectorHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DetectorHit G__TDetectorHit;
static int G__KnuclRootDataCint_258_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DetectorHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DetectorHit*) (soff+(sizeof(DetectorHit)*i)))->~G__TDetectorHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DetectorHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DetectorHit*) (soff))->~G__TDetectorHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__KnuclRootDataCint_258_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DetectorHit* dest = (DetectorHit*) G__getstructoffset();
   *dest = *(DetectorHit*) libp->para[0].ref;
   const DetectorHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CounterHit */
static int G__KnuclRootDataCint_259_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CounterHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CounterHit[n];
     } else {
       p = new((void*) gvp) CounterHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CounterHit;
     } else {
       p = new((void*) gvp) CounterHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_CounterHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CounterHit*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CounterHit*) G__getstructoffset())->Append((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, *((TVector3*) G__int(libp->para[4])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CounterHit*) G__getstructoffset())->getCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CounterHit*) G__getstructoffset())->getTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CounterHit*) G__getstructoffset())->getPID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CounterHit*) G__getstructoffset())->getTID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CounterHit*) G__getstructoffset())->getPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CounterHit*) G__getstructoffset())->getX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CounterHit*) G__getstructoffset())->getY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CounterHit*) G__getstructoffset())->getZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CounterHit*) G__getstructoffset())->printStatus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CounterHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CounterHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CounterHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CounterHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CounterHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CounterHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CounterHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CounterHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_259_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CounterHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__KnuclRootDataCint_259_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CounterHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CounterHit(*(CounterHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_CounterHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CounterHit G__TCounterHit;
static int G__KnuclRootDataCint_259_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CounterHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CounterHit*) (soff+(sizeof(CounterHit)*i)))->~G__TCounterHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CounterHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CounterHit*) (soff))->~G__TCounterHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__KnuclRootDataCint_259_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CounterHit* dest = (CounterHit*) G__getstructoffset();
   *dest = *(CounterHit*) libp->para[0].ref;
   const CounterHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Track */
static int G__KnuclRootDataCint_260_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Track* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Track[n];
     } else {
       p = new((void*) gvp) Track[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Track;
     } else {
       p = new((void*) gvp) Track;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_Track));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Track*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Track*) G__getstructoffset())->setTrackID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Track*) G__getstructoffset())->setParentTrackID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Track*) G__getstructoffset())->setPdgID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Track*) G__getstructoffset())->setFlightLength((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Track*) G__getstructoffset())->setVertex(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Track*) G__getstructoffset())->setMomentum(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Track*) G__getstructoffset())->setDetectorHitLink(*(vector<Int_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Track*) G__getstructoffset())->setDetectorHitLink((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Track*) G__getstructoffset())->setDetectorHitLink((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Track*) G__getstructoffset())->trackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Track*) G__getstructoffset())->parentTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Track*) G__getstructoffset())->pdgID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const Track*) G__getstructoffset())->vertex();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const Track*) G__getstructoffset())->momentum();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Track*) G__getstructoffset())->FlightLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Track*) G__getstructoffset())->detectorHitLinkSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Track*) G__getstructoffset())->detectorHitLink((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Track*) G__getstructoffset())->detectorHitLink());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Track::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Track::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Track::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Track::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Track*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Track::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Track::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Track::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_260_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Track::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__KnuclRootDataCint_260_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Track* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Track(*(Track*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_Track));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Track G__TTrack;
static int G__KnuclRootDataCint_260_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Track*) (soff+(sizeof(Track)*i)))->~G__TTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Track*) (soff))->~G__TTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__KnuclRootDataCint_260_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Track* dest = (Track*) G__getstructoffset();
   *dest = *(Track*) libp->para[0].ref;
   const Track& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RunHeaderMC */
static int G__KnuclRootDataCint_261_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RunHeaderMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RunHeaderMC[n];
     } else {
       p = new((void*) gvp) RunHeaderMC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RunHeaderMC;
     } else {
       p = new((void*) gvp) RunHeaderMC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_RunHeaderMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeaderMC*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeaderMC*) G__getstructoffset())->setSeed((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeaderMC*) G__getstructoffset())->setNumEvent((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeaderMC*) G__getstructoffset())->setNumGenerated((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeaderMC*) G__getstructoffset())->setCounterList(*((vector<Int_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeaderMC*) G__getstructoffset())->setCounterList((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeaderMC*) G__getstructoffset())->setCStable(*(CrossSectionTable*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RunHeaderMC*) G__getstructoffset())->seed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RunHeaderMC*) G__getstructoffset())->numEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RunHeaderMC*) G__getstructoffset())->numGenerated());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RunHeaderMC*) G__getstructoffset())->counterListSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RunHeaderMC*) G__getstructoffset())->counterList((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Int_t>* pobj;
         const vector<Int_t> xobj = ((const RunHeaderMC*) G__getstructoffset())->counterList();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CrossSectionTable* pobj;
         const CrossSectionTable xobj = ((const RunHeaderMC*) G__getstructoffset())->CStable();
         pobj = new CrossSectionTable(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RunHeaderMC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RunHeaderMC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RunHeaderMC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RunHeaderMC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeaderMC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RunHeaderMC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RunHeaderMC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RunHeaderMC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_261_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RunHeaderMC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__KnuclRootDataCint_261_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RunHeaderMC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RunHeaderMC(*(RunHeaderMC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_RunHeaderMC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RunHeaderMC G__TRunHeaderMC;
static int G__KnuclRootDataCint_261_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RunHeaderMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RunHeaderMC*) (soff+(sizeof(RunHeaderMC)*i)))->~G__TRunHeaderMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RunHeaderMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RunHeaderMC*) (soff))->~G__TRunHeaderMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__KnuclRootDataCint_261_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RunHeaderMC* dest = (RunHeaderMC*) G__getstructoffset();
   *dest = *(RunHeaderMC*) libp->para[0].ref;
   const RunHeaderMC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EventHeaderMC */
static int G__KnuclRootDataCint_262_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventHeaderMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventHeaderMC[n];
     } else {
       p = new((void*) gvp) EventHeaderMC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventHeaderMC;
     } else {
       p = new((void*) gvp) EventHeaderMC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_EventHeaderMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_262_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeaderMC*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_262_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeaderMC*) G__getstructoffset())->setEventID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_262_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EventHeaderMC*) G__getstructoffset())->eventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_262_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EventHeaderMC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_262_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventHeaderMC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_262_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EventHeaderMC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_262_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EventHeaderMC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_262_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeaderMC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_262_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventHeaderMC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_262_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventHeaderMC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_262_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventHeaderMC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_262_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventHeaderMC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__KnuclRootDataCint_262_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EventHeaderMC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EventHeaderMC(*(EventHeaderMC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_EventHeaderMC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EventHeaderMC G__TEventHeaderMC;
static int G__KnuclRootDataCint_262_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EventHeaderMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EventHeaderMC*) (soff+(sizeof(EventHeaderMC)*i)))->~G__TEventHeaderMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EventHeaderMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EventHeaderMC*) (soff))->~G__TEventHeaderMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__KnuclRootDataCint_262_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventHeaderMC* dest = (EventHeaderMC*) G__getstructoffset();
   *dest = *(EventHeaderMC*) libp->para[0].ref;
   const EventHeaderMC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DetectorData */
static int G__KnuclRootDataCint_263_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DetectorData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DetectorData[n];
     } else {
       p = new((void*) gvp) DetectorData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DetectorData;
     } else {
       p = new((void*) gvp) DetectorData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_263_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorData*) G__getstructoffset())->setDetectorHit(*(vector<DetectorHit>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_263_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorData*) G__getstructoffset())->setDetectorHit(*(DetectorHit*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_263_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorData*) G__getstructoffset())->setDetectorHit((Int_t) G__int(libp->para[0]), *(DetectorHit*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_263_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const DetectorData*) G__getstructoffset())->detectorHitSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_263_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DetectorData*) G__getstructoffset())->detectorHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_263_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DetectorData*) G__getstructoffset())->detectorHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_263_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DetectorData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_263_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DetectorData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_263_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DetectorData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_263_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DetectorData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_263_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_263_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DetectorData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_263_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DetectorData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_263_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DetectorData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_263_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DetectorData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__KnuclRootDataCint_263_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DetectorData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DetectorData(*(DetectorData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DetectorData G__TDetectorData;
static int G__KnuclRootDataCint_263_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DetectorData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DetectorData*) (soff+(sizeof(DetectorData)*i)))->~G__TDetectorData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DetectorData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DetectorData*) (soff))->~G__TDetectorData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__KnuclRootDataCint_263_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DetectorData* dest = (DetectorData*) G__getstructoffset();
   *dest = *(DetectorData*) libp->para[0].ref;
   const DetectorData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MCData */
static int G__KnuclRootDataCint_268_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MCData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MCData[n];
     } else {
       p = new((void*) gvp) MCData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MCData;
     } else {
       p = new((void*) gvp) MCData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_MCData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_268_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCData*) G__getstructoffset())->setTrack(*(vector<Track>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_268_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCData*) G__getstructoffset())->setTrack(*(Track*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_268_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCData*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]), *(Track*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_268_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MCData*) G__getstructoffset())->trackSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_268_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MCData*) G__getstructoffset())->track((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_268_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MCData*) G__getstructoffset())->track());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_268_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MCData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_268_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MCData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_268_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MCData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_268_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MCData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_268_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_268_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MCData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_268_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MCData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_268_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MCData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_268_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MCData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__KnuclRootDataCint_268_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MCData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MCData(*(MCData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_MCData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MCData G__TMCData;
static int G__KnuclRootDataCint_268_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MCData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MCData*) (soff+(sizeof(MCData)*i)))->~G__TMCData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MCData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MCData*) (soff))->~G__TMCData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__KnuclRootDataCint_268_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MCData* dest = (MCData*) G__getstructoffset();
   *dest = *(MCData*) libp->para[0].ref;
   const MCData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ReactionData */
static int G__KnuclRootDataCint_273_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ReactionData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ReactionData[n];
     } else {
       p = new((void*) gvp) ReactionData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ReactionData;
     } else {
       p = new((void*) gvp) ReactionData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_ReactionData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReactionData*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReactionData*) G__getstructoffset())->SetCMParticle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReactionData*) G__getstructoffset())->SetParticle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReactionData*) G__getstructoffset())->SetInitParticle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ReactionData*) G__getstructoffset())->CMparticleSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ReactionData*) G__getstructoffset())->ParticleSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ReactionData*) G__getstructoffset())->InitParticleSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((ReactionData*) G__getstructoffset())->GetCMParticle((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((ReactionData*) G__getstructoffset())->GetParticle((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((ReactionData*) G__getstructoffset())->GetInitParticle((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReactionData*) G__getstructoffset())->SetReactionID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReactionData*) G__getstructoffset())->SetPDG((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReactionData*) G__getstructoffset())->SetInitPDG((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReactionData*) G__getstructoffset())->SetNParticle((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ReactionData*) G__getstructoffset())->ReactionID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ReactionData*) G__getstructoffset())->PDGSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ReactionData*) G__getstructoffset())->InitPDGSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>& obj = ((ReactionData*) G__getstructoffset())->PDG();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>& obj = ((ReactionData*) G__getstructoffset())->InitPDG();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ReactionData*) G__getstructoffset())->PDG((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ReactionData*) G__getstructoffset())->InitPDG((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ReactionData*) G__getstructoffset())->NParticle((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReactionData*) G__getstructoffset())->SetFermiMom((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReactionData*) G__getstructoffset())->SetTmpVal((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ReactionData*) G__getstructoffset())->FermiMom((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ReactionData*) G__getstructoffset())->TmpVal((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ReactionData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ReactionData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ReactionData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ReactionData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReactionData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ReactionData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ReactionData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ReactionData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KnuclRootDataCint_273_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ReactionData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__KnuclRootDataCint_273_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ReactionData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ReactionData(*(ReactionData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KnuclRootDataCintLN_ReactionData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ReactionData G__TReactionData;
static int G__KnuclRootDataCint_273_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ReactionData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ReactionData*) (soff+(sizeof(ReactionData)*i)))->~G__TReactionData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ReactionData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ReactionData*) (soff))->~G__TReactionData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__KnuclRootDataCint_273_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ReactionData* dest = (ReactionData*) G__getstructoffset();
   *dest = *(ReactionData*) libp->para[0].ref;
   const ReactionData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* CrossSection */

/* CrossSectionTable */

/* DetectorHit */

/* CounterHit */

/* Track */

/* RunHeaderMC */

/* EventHeaderMC */

/* DetectorData */

/* MCData */

/* ReactionData */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncKnuclRootDataCint {
 public:
  G__Sizep2memfuncKnuclRootDataCint(): p(&G__Sizep2memfuncKnuclRootDataCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncKnuclRootDataCint::*p)();
};

size_t G__get_sizep2memfuncKnuclRootDataCint()
{
  G__Sizep2memfuncKnuclRootDataCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceKnuclRootDataCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSection))) {
     CrossSection *G__Lderived;
     G__Lderived=(CrossSection*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSection),G__get_linked_tagnum(&G__KnuclRootDataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSectionTable))) {
     CrossSectionTable *G__Lderived;
     G__Lderived=(CrossSectionTable*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSectionTable),G__get_linked_tagnum(&G__KnuclRootDataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorHit))) {
     DetectorHit *G__Lderived;
     G__Lderived=(DetectorHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorHit),G__get_linked_tagnum(&G__KnuclRootDataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__KnuclRootDataCintLN_CounterHit))) {
     CounterHit *G__Lderived;
     G__Lderived=(CounterHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_CounterHit),G__get_linked_tagnum(&G__KnuclRootDataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__KnuclRootDataCintLN_Track))) {
     Track *G__Lderived;
     G__Lderived=(Track*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_Track),G__get_linked_tagnum(&G__KnuclRootDataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__KnuclRootDataCintLN_RunHeaderMC))) {
     RunHeaderMC *G__Lderived;
     G__Lderived=(RunHeaderMC*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_RunHeaderMC),G__get_linked_tagnum(&G__KnuclRootDataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__KnuclRootDataCintLN_EventHeaderMC))) {
     EventHeaderMC *G__Lderived;
     G__Lderived=(EventHeaderMC*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_EventHeaderMC),G__get_linked_tagnum(&G__KnuclRootDataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorData))) {
     DetectorData *G__Lderived;
     G__Lderived=(DetectorData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorData),G__get_linked_tagnum(&G__KnuclRootDataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__KnuclRootDataCintLN_MCData))) {
     MCData *G__Lderived;
     G__Lderived=(MCData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_MCData),G__get_linked_tagnum(&G__KnuclRootDataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__KnuclRootDataCintLN_ReactionData))) {
     ReactionData *G__Lderived;
     G__Lderived=(ReactionData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_ReactionData),G__get_linked_tagnum(&G__KnuclRootDataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableKnuclRootDataCint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CrossSection>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlECrossSectioncOallocatorlECrossSectiongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlECrossSectioncOallocatorlECrossSectiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlECrossSectioncOallocatorlECrossSectiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlECrossSectioncOallocatorlECrossSectiongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlECrossSectioncOallocatorlECrossSectiongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<DetectorHit>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEDetectorHitcOallocatorlEDetectorHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlEDetectorHitcOallocatorlEDetectorHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEDetectorHitcOallocatorlEDetectorHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlEDetectorHitcOallocatorlEDetectorHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEDetectorHitcOallocatorlEDetectorHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Track>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlETrackcOallocatorlETrackgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlETrackcOallocatorlETrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlETrackcOallocatorlETrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlETrackcOallocatorlETrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlETrackcOallocatorlETrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TLorentzVector>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TLorentzVectorContainer",117,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_ReactionData));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* CrossSection */
static void G__setup_memvarCrossSection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSection));
   { CrossSection *p; p=(CrossSection*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fId=",0,"reaction ID, based on CERN-HERA-83-02");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fCs=",0,"cross-section [mb]");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fCsFactor=",0,"factor for input CS");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fInitMom=",0,"momentum of the beam particle, fInitPdg[0]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"fInitPdg=",0,"pdg codes of initial particles 0:beam, 1:target, 2:reaction");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"fFinlPdg=",0,"pdg codes of finlhters");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"fSpecPdg=",0,"pdg codes of spectators");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fPol=",0,"coefficients A(n) for Legendre polynomial;");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fPolMax=",0,"maximum value for random-number generation");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CrossSectionTable */
static void G__setup_memvarCrossSectionTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSectionTable));
   { CrossSectionTable *p; p=(CrossSectionTable*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlECrossSectioncOallocatorlECrossSectiongRsPgR),G__defined_typename("vector<CrossSection>"),-1,4,"fCS=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fTotalCS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DetectorHit */
static void G__setup_memvarDetectorHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorHit));
   { DetectorHit *p; p=(DetectorHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nHitID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nDetectorID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nLayerID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nChannelID=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"dAdc=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"dTdc=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TVector3),-1,-1,4,"tPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TVector3),-1,-1,4,"tMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nTrackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"dTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"dDe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"dDt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"dDx=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nPDG=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nParentID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CounterHit */
static void G__setup_memvarCounterHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_CounterHit));
   { CounterHit *p; p=(CounterHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"t_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"t_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"t_track_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"t_pid=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TVector3),-1,-1,4,"t_pos=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"hit_particle[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Track */
static void G__setup_memvarTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_Track));
   { Track *p; p=(Track*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nTrackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nParentTrackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nPdgID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TVector3),-1,-1,4,"tVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TVector3),-1,-1,4,"tMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFlightLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"vnDetectorHitLink=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RunHeaderMC */
static void G__setup_memvarRunHeaderMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_RunHeaderMC));
   { RunHeaderMC *p; p=(RunHeaderMC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nSeed=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nNumEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nNumGenerated=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"vnCounterList=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSectionTable),-1,-1,4,"fCStable=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EventHeaderMC */
static void G__setup_memvarEventHeaderMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_EventHeaderMC));
   { EventHeaderMC *p; p=(EventHeaderMC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nEventID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DetectorData */
static void G__setup_memvarDetectorData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorData));
   { DetectorData *p; p=(DetectorData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEDetectorHitcOallocatorlEDetectorHitgRsPgR),G__defined_typename("vector<DetectorHit>"),-1,4,"vcDetectorHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MCData */
static void G__setup_memvarMCData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_MCData));
   { MCData *p; p=(MCData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlETrackcOallocatorlETrackgRsPgR),G__defined_typename("vector<Track>"),-1,4,"vcTrack=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ReactionData */
static void G__setup_memvarReactionData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_ReactionData));
   { ReactionData *p; p=(ReactionData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("TLorentzVectorContainer"),-1,4,"fCMOutParticleContainer=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("TLorentzVectorContainer"),-1,4,"fOutParticleContainer=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("TLorentzVectorContainer"),-1,4,"fInitParticleContainer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fReactionID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"fPDG=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"fInitPDG=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNParticle[2]=",0,"0:nFin 1:nSpec");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFermiMom[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fTmpVal[8]=",0,"temporal container for studies");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarKnuclRootDataCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncCrossSection(void) {
   /* CrossSection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSection));
   G__memfunc_setup("CrossSection",1247,G__KnuclRootDataCint_249_0_1, 105, G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSection), -1, 0, 0, 1, 1, 0, "", "CAUTION :: not initialze here", (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__KnuclRootDataCint_249_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - initMom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetId",473,G__KnuclRootDataCint_249_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCs",482,G__KnuclRootDataCint_249_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - cs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCsFactor",1089,G__KnuclRootDataCint_249_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - csfactor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitMom",1001,G__KnuclRootDataCint_249_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - mom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitPdg",987,G__KnuclRootDataCint_249_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<int>' 11 - pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFinlPdg",976,G__KnuclRootDataCint_249_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<int>' 11 - pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSpecPdg",978,G__KnuclRootDataCint_249_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<int>' 11 - pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPol",599,G__KnuclRootDataCint_249_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - pol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPolMax",893,G__KnuclRootDataCint_249_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Id",173,G__KnuclRootDataCint_249_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cs",182,G__KnuclRootDataCint_249_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CsFactor",789,G__KnuclRootDataCint_249_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitMom",701,G__KnuclRootDataCint_249_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitPdgSize",1098,G__KnuclRootDataCint_249_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FinlPdgSize",1087,G__KnuclRootDataCint_249_0_17, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SpecPdgSize",1089,G__KnuclRootDataCint_249_0_18, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitPdg",687,G__KnuclRootDataCint_249_0_19, 117, G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FinlPdg",676,G__KnuclRootDataCint_249_0_20, 117, G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SpecPdg",678,G__KnuclRootDataCint_249_0_21, 117, G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitPdg",687,G__KnuclRootDataCint_249_0_22, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FinlPdg",676,G__KnuclRootDataCint_249_0_23, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SpecPdg",678,G__KnuclRootDataCint_249_0_24, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PolSize",710,G__KnuclRootDataCint_249_0_25, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pol",299,G__KnuclRootDataCint_249_0_26, 117, G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pol",299,G__KnuclRootDataCint_249_0_27, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PolMax",593,G__KnuclRootDataCint_249_0_28, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCS",675,G__KnuclRootDataCint_249_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__KnuclRootDataCint_249_0_30, 85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CrossSection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__KnuclRootDataCint_249_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CrossSection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__KnuclRootDataCint_249_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CrossSection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__KnuclRootDataCint_249_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CrossSection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__KnuclRootDataCint_249_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__KnuclRootDataCint_249_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CrossSection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__KnuclRootDataCint_249_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CrossSection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__KnuclRootDataCint_249_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CrossSection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__KnuclRootDataCint_249_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CrossSection::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CrossSection", 1247, G__KnuclRootDataCint_249_0_42, (int) ('i'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSection), -1, 0, 1, 1, 1, 0, "u 'CrossSection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CrossSection", 1373, G__KnuclRootDataCint_249_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__KnuclRootDataCint_249_0_44, (int) ('u'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSection), -1, 1, 1, 1, 1, 0, "u 'CrossSection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCrossSectionTable(void) {
   /* CrossSectionTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSectionTable));
   G__memfunc_setup("CrossSectionTable",1735,G__KnuclRootDataCint_253_0_1, 105, G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSectionTable), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CrossSectionTable",1735,G__KnuclRootDataCint_253_0_2, 105, G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSectionTable), -1, 0, 2, 1, 1, 0, 
"C - - 10 - CSFileName d - - 0 - initMom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCS",450,G__KnuclRootDataCint_253_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CrossSection' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CSSize",561,G__KnuclRootDataCint_253_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CS",150,G__KnuclRootDataCint_253_0_5, 117, G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlECrossSectioncOallocatorlECrossSectiongRsPgR), G__defined_typename("vector<CrossSection>"), 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CS",150,G__KnuclRootDataCint_253_0_6, 117, G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSection), -1, 1, 1, 1, 1, 1, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TotalCS",666,G__KnuclRootDataCint_253_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__KnuclRootDataCint_253_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckCSList",1040,G__KnuclRootDataCint_253_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcTotalCS",1037,G__KnuclRootDataCint_253_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintAllCS",956,G__KnuclRootDataCint_253_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__KnuclRootDataCint_253_0_12, 85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CrossSectionTable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__KnuclRootDataCint_253_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CrossSectionTable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__KnuclRootDataCint_253_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CrossSectionTable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__KnuclRootDataCint_253_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CrossSectionTable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__KnuclRootDataCint_253_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__KnuclRootDataCint_253_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CrossSectionTable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__KnuclRootDataCint_253_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CrossSectionTable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__KnuclRootDataCint_253_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CrossSectionTable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__KnuclRootDataCint_253_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CrossSectionTable::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CrossSectionTable", 1735, G__KnuclRootDataCint_253_0_24, (int) ('i'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSectionTable), -1, 0, 1, 1, 1, 0, "u 'CrossSectionTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CrossSectionTable", 1861, G__KnuclRootDataCint_253_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__KnuclRootDataCint_253_0_26, (int) ('u'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSectionTable), -1, 1, 1, 1, 1, 0, "u 'CrossSectionTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDetectorHit(void) {
   /* DetectorHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorHit));
   G__memfunc_setup("DetectorHit",1119,G__KnuclRootDataCint_258_0_1, 105, G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__KnuclRootDataCint_258_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHitID",766,G__KnuclRootDataCint_258_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDetectorID",1299,G__KnuclRootDataCint_258_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLayerID",982,G__KnuclRootDataCint_258_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChannelID",1170,G__KnuclRootDataCint_258_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAdc",596,G__KnuclRootDataCint_258_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTdc",615,G__KnuclRootDataCint_258_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPos",638,G__KnuclRootDataCint_258_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMomentum",1182,G__KnuclRootDataCint_258_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackID",974,G__KnuclRootDataCint_258_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTime",731,G__KnuclRootDataCint_258_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDe",501,G__KnuclRootDataCint_258_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDt",516,G__KnuclRootDataCint_258_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDx",520,G__KnuclRootDataCint_258_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPDG",551,G__KnuclRootDataCint_258_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParentID",1091,G__KnuclRootDataCint_258_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hitID",466,G__KnuclRootDataCint_258_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("detectorID",999,G__KnuclRootDataCint_258_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("layerID",682,G__KnuclRootDataCint_258_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("channelID",870,G__KnuclRootDataCint_258_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("adc",296,G__KnuclRootDataCint_258_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tdc",315,G__KnuclRootDataCint_258_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pos",338,G__KnuclRootDataCint_258_0_24, 117, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("momentum",882,G__KnuclRootDataCint_258_0_25, 117, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trackID",674,G__KnuclRootDataCint_258_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("time",431,G__KnuclRootDataCint_258_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("de",201,G__KnuclRootDataCint_258_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dt",216,G__KnuclRootDataCint_258_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dx",220,G__KnuclRootDataCint_258_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pdg",315,G__KnuclRootDataCint_258_0_31, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parentID",791,G__KnuclRootDataCint_258_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__KnuclRootDataCint_258_0_33, 85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DetectorHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__KnuclRootDataCint_258_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DetectorHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__KnuclRootDataCint_258_0_35, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DetectorHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__KnuclRootDataCint_258_0_36, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DetectorHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__KnuclRootDataCint_258_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__KnuclRootDataCint_258_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DetectorHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__KnuclRootDataCint_258_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DetectorHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__KnuclRootDataCint_258_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DetectorHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__KnuclRootDataCint_258_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DetectorHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DetectorHit", 1119, G__KnuclRootDataCint_258_0_45, (int) ('i'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorHit), -1, 0, 1, 1, 1, 0, "u 'DetectorHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DetectorHit", 1245, G__KnuclRootDataCint_258_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__KnuclRootDataCint_258_0_47, (int) ('u'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorHit), -1, 1, 1, 1, 1, 0, "u 'DetectorHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCounterHit(void) {
   /* CounterHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_CounterHit));
   G__memfunc_setup("CounterHit",1029,G__KnuclRootDataCint_259_0_1, 105, G__get_linked_tagnum(&G__KnuclRootDataCintLN_CounterHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__KnuclRootDataCint_259_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Append",600,G__KnuclRootDataCint_259_0_3, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - - 0 - ch d - - 0 - t "
"i - - 0 - pid i - - 0 - tid "
"u 'TVector3' - 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCharge",906,G__KnuclRootDataCint_259_0_4, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTime",719,G__KnuclRootDataCint_259_0_5, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPID",541,G__KnuclRootDataCint_259_0_6, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTID",545,G__KnuclRootDataCint_259_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPhi",609,G__KnuclRootDataCint_259_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getX",408,G__KnuclRootDataCint_259_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getY",409,G__KnuclRootDataCint_259_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZ",410,G__KnuclRootDataCint_259_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printStatus",1201,G__KnuclRootDataCint_259_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__KnuclRootDataCint_259_0_13, 85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CounterHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__KnuclRootDataCint_259_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CounterHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__KnuclRootDataCint_259_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CounterHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__KnuclRootDataCint_259_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CounterHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__KnuclRootDataCint_259_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__KnuclRootDataCint_259_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CounterHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__KnuclRootDataCint_259_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CounterHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__KnuclRootDataCint_259_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CounterHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__KnuclRootDataCint_259_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CounterHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CounterHit", 1029, G__KnuclRootDataCint_259_0_25, (int) ('i'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_CounterHit), -1, 0, 1, 1, 1, 0, "u 'CounterHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CounterHit", 1155, G__KnuclRootDataCint_259_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__KnuclRootDataCint_259_0_27, (int) ('u'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_CounterHit), -1, 1, 1, 1, 1, 0, "u 'CounterHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTrack(void) {
   /* Track */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_Track));
   G__memfunc_setup("Track",501,G__KnuclRootDataCint_260_0_1, 105, G__get_linked_tagnum(&G__KnuclRootDataCintLN_Track), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__KnuclRootDataCint_260_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackID",974,G__KnuclRootDataCint_260_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParentTrackID",1592,G__KnuclRootDataCint_260_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPdgID",756,G__KnuclRootDataCint_260_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFlightLength",1548,G__KnuclRootDataCint_260_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVertex",970,G__KnuclRootDataCint_260_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMomentum",1182,G__KnuclRootDataCint_260_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDetectorHitLink",1849,G__KnuclRootDataCint_260_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<Int_t>' 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDetectorHitLink",1849,G__KnuclRootDataCint_260_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDetectorHitLink",1849,G__KnuclRootDataCint_260_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trackID",674,G__KnuclRootDataCint_260_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parentTrackID",1292,G__KnuclRootDataCint_260_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pdgID",456,G__KnuclRootDataCint_260_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vertex",670,G__KnuclRootDataCint_260_0_15, 117, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("momentum",882,G__KnuclRootDataCint_260_0_16, 117, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FlightLength",1216,G__KnuclRootDataCint_260_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("detectorHitLinkSize",1960,G__KnuclRootDataCint_260_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("detectorHitLink",1549,G__KnuclRootDataCint_260_0_19, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("detectorHitLink",1549,G__KnuclRootDataCint_260_0_20, 85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__KnuclRootDataCint_260_0_21, 85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Track::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__KnuclRootDataCint_260_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Track::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__KnuclRootDataCint_260_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Track::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__KnuclRootDataCint_260_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Track::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__KnuclRootDataCint_260_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__KnuclRootDataCint_260_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Track::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__KnuclRootDataCint_260_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Track::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__KnuclRootDataCint_260_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Track::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__KnuclRootDataCint_260_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Track::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Track", 501, G__KnuclRootDataCint_260_0_33, (int) ('i'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_Track), -1, 0, 1, 1, 1, 0, "u 'Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Track", 627, G__KnuclRootDataCint_260_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__KnuclRootDataCint_260_0_35, (int) ('u'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_Track), -1, 1, 1, 1, 1, 0, "u 'Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRunHeaderMC(void) {
   /* RunHeaderMC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_RunHeaderMC));
   G__memfunc_setup("RunHeaderMC",1038,G__KnuclRootDataCint_261_0_1, 105, G__get_linked_tagnum(&G__KnuclRootDataCintLN_RunHeaderMC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__KnuclRootDataCint_261_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSeed",717,G__KnuclRootDataCint_261_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNumEvent",1150,G__KnuclRootDataCint_261_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNumGenerated",1547,G__KnuclRootDataCint_261_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCounterList",1480,G__KnuclRootDataCint_261_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCounterList",1480,G__KnuclRootDataCint_261_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCStable",1002,G__KnuclRootDataCint_261_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CrossSectionTable' - 11 - table", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("seed",417,G__KnuclRootDataCint_261_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numEvent",850,G__KnuclRootDataCint_261_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numGenerated",1247,G__KnuclRootDataCint_261_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("counterListSize",1591,G__KnuclRootDataCint_261_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("counterList",1180,G__KnuclRootDataCint_261_0_13, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("counterList",1180,G__KnuclRootDataCint_261_0_14, 117, G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CStable",670,G__KnuclRootDataCint_261_0_15, 117, G__get_linked_tagnum(&G__KnuclRootDataCintLN_CrossSectionTable), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__KnuclRootDataCint_261_0_16, 85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RunHeaderMC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__KnuclRootDataCint_261_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RunHeaderMC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__KnuclRootDataCint_261_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RunHeaderMC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__KnuclRootDataCint_261_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RunHeaderMC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__KnuclRootDataCint_261_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__KnuclRootDataCint_261_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RunHeaderMC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__KnuclRootDataCint_261_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RunHeaderMC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__KnuclRootDataCint_261_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RunHeaderMC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__KnuclRootDataCint_261_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RunHeaderMC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RunHeaderMC", 1038, G__KnuclRootDataCint_261_0_28, (int) ('i'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_RunHeaderMC), -1, 0, 1, 1, 1, 0, "u 'RunHeaderMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RunHeaderMC", 1164, G__KnuclRootDataCint_261_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__KnuclRootDataCint_261_0_30, (int) ('u'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_RunHeaderMC), -1, 1, 1, 1, 1, 0, "u 'RunHeaderMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEventHeaderMC(void) {
   /* EventHeaderMC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_EventHeaderMC));
   G__memfunc_setup("EventHeaderMC",1243,G__KnuclRootDataCint_262_0_1, 105, G__get_linked_tagnum(&G__KnuclRootDataCintLN_EventHeaderMC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__KnuclRootDataCint_262_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventID",987,G__KnuclRootDataCint_262_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventID",687,G__KnuclRootDataCint_262_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__KnuclRootDataCint_262_0_5, 85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EventHeaderMC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__KnuclRootDataCint_262_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventHeaderMC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__KnuclRootDataCint_262_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EventHeaderMC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__KnuclRootDataCint_262_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EventHeaderMC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__KnuclRootDataCint_262_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__KnuclRootDataCint_262_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventHeaderMC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__KnuclRootDataCint_262_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventHeaderMC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__KnuclRootDataCint_262_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventHeaderMC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__KnuclRootDataCint_262_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventHeaderMC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EventHeaderMC", 1243, G__KnuclRootDataCint_262_0_17, (int) ('i'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_EventHeaderMC), -1, 0, 1, 1, 1, 0, "u 'EventHeaderMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventHeaderMC", 1369, G__KnuclRootDataCint_262_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__KnuclRootDataCint_262_0_19, (int) ('u'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_EventHeaderMC), -1, 1, 1, 1, 1, 0, "u 'EventHeaderMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDetectorData(void) {
   /* DetectorData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorData));
   G__memfunc_setup("DetectorData",1204,G__KnuclRootDataCint_263_0_1, 105, G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDetectorHit",1451,G__KnuclRootDataCint_263_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<DetectorHit,allocator<DetectorHit> >' 'vector<DetectorHit>' 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDetectorHit",1451,G__KnuclRootDataCint_263_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'DetectorHit' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDetectorHit",1451,G__KnuclRootDataCint_263_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i u 'DetectorHit' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("detectorHitSize",1562,G__KnuclRootDataCint_263_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("detectorHit",1151,G__KnuclRootDataCint_263_0_6, 85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorHit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("detectorHit",1151,G__KnuclRootDataCint_263_0_7, 85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEDetectorHitcOallocatorlEDetectorHitgRsPgR), G__defined_typename("vector<DetectorHit>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__KnuclRootDataCint_263_0_8, 85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DetectorData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__KnuclRootDataCint_263_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DetectorData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__KnuclRootDataCint_263_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DetectorData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__KnuclRootDataCint_263_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DetectorData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__KnuclRootDataCint_263_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__KnuclRootDataCint_263_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DetectorData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__KnuclRootDataCint_263_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DetectorData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__KnuclRootDataCint_263_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DetectorData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__KnuclRootDataCint_263_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DetectorData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DetectorData", 1204, G__KnuclRootDataCint_263_0_20, (int) ('i'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorData), -1, 0, 1, 1, 1, 0, "u 'DetectorData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DetectorData", 1330, G__KnuclRootDataCint_263_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__KnuclRootDataCint_263_0_22, (int) ('u'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_DetectorData), -1, 1, 1, 1, 1, 0, "u 'DetectorData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMCData(void) {
   /* MCData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_MCData));
   G__memfunc_setup("MCData",522,G__KnuclRootDataCint_268_0_1, 105, G__get_linked_tagnum(&G__KnuclRootDataCintLN_MCData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__KnuclRootDataCint_268_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Track,allocator<Track> >' 'vector<Track>' 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__KnuclRootDataCint_268_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Track' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__KnuclRootDataCint_268_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i u 'Track' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trackSize",944,G__KnuclRootDataCint_268_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("track",533,G__KnuclRootDataCint_268_0_6, 85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_Track), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("track",533,G__KnuclRootDataCint_268_0_7, 85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlETrackcOallocatorlETrackgRsPgR), G__defined_typename("vector<Track>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__KnuclRootDataCint_268_0_8, 85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MCData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__KnuclRootDataCint_268_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MCData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__KnuclRootDataCint_268_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MCData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__KnuclRootDataCint_268_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MCData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__KnuclRootDataCint_268_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__KnuclRootDataCint_268_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MCData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__KnuclRootDataCint_268_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MCData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__KnuclRootDataCint_268_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MCData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__KnuclRootDataCint_268_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MCData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MCData", 522, G__KnuclRootDataCint_268_0_20, (int) ('i'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_MCData), -1, 0, 1, 1, 1, 0, "u 'MCData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCData", 648, G__KnuclRootDataCint_268_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__KnuclRootDataCint_268_0_22, (int) ('u'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_MCData), -1, 1, 1, 1, 1, 0, "u 'MCData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncReactionData(void) {
   /* ReactionData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__KnuclRootDataCintLN_ReactionData));
   G__memfunc_setup("ReactionData",1199,G__KnuclRootDataCint_273_0_1, 105, G__get_linked_tagnum(&G__KnuclRootDataCintLN_ReactionData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__KnuclRootDataCint_273_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCMParticle",1264,G__KnuclRootDataCint_273_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticle",1120,G__KnuclRootDataCint_273_0_4, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitParticle",1524,G__KnuclRootDataCint_273_0_5, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CMparticleSize",1407,G__KnuclRootDataCint_273_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParticleSize",1231,G__KnuclRootDataCint_273_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitParticleSize",1635,G__KnuclRootDataCint_273_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCMParticle",1252,G__KnuclRootDataCint_273_0_9, 117, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TLorentzVector), -1, 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__KnuclRootDataCint_273_0_10, 117, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TLorentzVector), -1, 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInitParticle",1512,G__KnuclRootDataCint_273_0_11, 117, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TLorentzVector), -1, 1, 1, 1, 1, 1, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReactionID",1262,G__KnuclRootDataCint_273_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPDG",519,G__KnuclRootDataCint_273_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitPDG",923,G__KnuclRootDataCint_273_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNParticle",1198,G__KnuclRootDataCint_273_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - a i - - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReactionID",962,G__KnuclRootDataCint_273_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PDGSize",630,G__KnuclRootDataCint_273_0_17, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitPDGSize",1034,G__KnuclRootDataCint_273_0_18, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PDG",219,G__KnuclRootDataCint_273_0_19, 117, G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitPDG",623,G__KnuclRootDataCint_273_0_20, 117, G__get_linked_tagnum(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PDG",219,G__KnuclRootDataCint_273_0_21, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitPDG",623,G__KnuclRootDataCint_273_0_22, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NParticle",898,G__KnuclRootDataCint_273_0_23, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFermiMom",1096,G__KnuclRootDataCint_273_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTmpVal",896,G__KnuclRootDataCint_273_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FermiMom",796,G__KnuclRootDataCint_273_0_26, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TmpVal",596,G__KnuclRootDataCint_273_0_27, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__KnuclRootDataCint_273_0_28, 85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ReactionData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__KnuclRootDataCint_273_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ReactionData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__KnuclRootDataCint_273_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ReactionData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__KnuclRootDataCint_273_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ReactionData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__KnuclRootDataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__KnuclRootDataCint_273_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__KnuclRootDataCint_273_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ReactionData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__KnuclRootDataCint_273_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ReactionData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__KnuclRootDataCint_273_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ReactionData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__KnuclRootDataCint_273_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ReactionData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ReactionData", 1199, G__KnuclRootDataCint_273_0_40, (int) ('i'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_ReactionData), -1, 0, 1, 1, 1, 0, "u 'ReactionData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ReactionData", 1325, G__KnuclRootDataCint_273_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__KnuclRootDataCint_273_0_42, (int) ('u'), G__get_linked_tagnum(&G__KnuclRootDataCintLN_ReactionData), -1, 1, 1, 1, 1, 0, "u 'ReactionData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncKnuclRootDataCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalKnuclRootDataCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcKnuclRootDataCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__KnuclRootDataCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_CrossSection = { "CrossSection" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_CrossSectionTable = { "CrossSectionTable" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_vectorlECrossSectioncOallocatorlECrossSectiongRsPgR = { "vector<CrossSection,allocator<CrossSection> >" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_reverse_iteratorlEvectorlECrossSectioncOallocatorlECrossSectiongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CrossSection,allocator<CrossSection> >::iterator>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_DetectorHit = { "DetectorHit" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_CounterHit = { "CounterHit" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_Track = { "Track" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_RunHeaderMC = { "RunHeaderMC" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_EventHeaderMC = { "EventHeaderMC" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_DetectorData = { "DetectorData" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_vectorlEDetectorHitcOallocatorlEDetectorHitgRsPgR = { "vector<DetectorHit,allocator<DetectorHit> >" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_reverse_iteratorlEvectorlEDetectorHitcOallocatorlEDetectorHitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<DetectorHit,allocator<DetectorHit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_MCData = { "MCData" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_vectorlETrackcOallocatorlETrackgRsPgR = { "vector<Track,allocator<Track> >" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_reverse_iteratorlEvectorlETrackcOallocatorlETrackgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Track,allocator<Track> >::iterator>" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_ReactionData = { "ReactionData" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR = { "vector<TLorentzVector,allocator<TLorentzVector> >" , 99 , -1 };
G__linked_taginfo G__KnuclRootDataCintLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TLorentzVector,allocator<TLorentzVector> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableKnuclRootDataCint() {
  G__KnuclRootDataCintLN_TClass.tagnum = -1 ;
  G__KnuclRootDataCintLN_TBuffer.tagnum = -1 ;
  G__KnuclRootDataCintLN_TMemberInspector.tagnum = -1 ;
  G__KnuclRootDataCintLN_TObject.tagnum = -1 ;
  G__KnuclRootDataCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_TVector3.tagnum = -1 ;
  G__KnuclRootDataCintLN_TLorentzVector.tagnum = -1 ;
  G__KnuclRootDataCintLN_CrossSection.tagnum = -1 ;
  G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_CrossSectionTable.tagnum = -1 ;
  G__KnuclRootDataCintLN_vectorlECrossSectioncOallocatorlECrossSectiongRsPgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_reverse_iteratorlEvectorlECrossSectioncOallocatorlECrossSectiongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_DetectorHit.tagnum = -1 ;
  G__KnuclRootDataCintLN_CounterHit.tagnum = -1 ;
  G__KnuclRootDataCintLN_Track.tagnum = -1 ;
  G__KnuclRootDataCintLN_RunHeaderMC.tagnum = -1 ;
  G__KnuclRootDataCintLN_EventHeaderMC.tagnum = -1 ;
  G__KnuclRootDataCintLN_DetectorData.tagnum = -1 ;
  G__KnuclRootDataCintLN_vectorlEDetectorHitcOallocatorlEDetectorHitgRsPgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_reverse_iteratorlEvectorlEDetectorHitcOallocatorlEDetectorHitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_MCData.tagnum = -1 ;
  G__KnuclRootDataCintLN_vectorlETrackcOallocatorlETrackgRsPgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_reverse_iteratorlEvectorlETrackcOallocatorlETrackgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_ReactionData.tagnum = -1 ;
  G__KnuclRootDataCintLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR.tagnum = -1 ;
  G__KnuclRootDataCintLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableKnuclRootDataCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TVector3);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_CrossSection),sizeof(CrossSection),-1,292096,(char*)NULL,G__setup_memvarCrossSection,G__setup_memfuncCrossSection);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_CrossSectionTable),sizeof(CrossSectionTable),-1,324864,(char*)NULL,G__setup_memvarCrossSectionTable,G__setup_memfuncCrossSectionTable);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_vectorlECrossSectioncOallocatorlECrossSectiongRsPgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlECrossSectioncOallocatorlECrossSectiongRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_DetectorHit),sizeof(DetectorHit),-1,292096,(char*)NULL,G__setup_memvarDetectorHit,G__setup_memfuncDetectorHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_CounterHit),sizeof(CounterHit),-1,292096,(char*)NULL,G__setup_memvarCounterHit,G__setup_memfuncCounterHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_Track),sizeof(Track),-1,292096,(char*)NULL,G__setup_memvarTrack,G__setup_memfuncTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_RunHeaderMC),sizeof(RunHeaderMC),-1,292096,(char*)NULL,G__setup_memvarRunHeaderMC,G__setup_memfuncRunHeaderMC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_EventHeaderMC),sizeof(EventHeaderMC),-1,292096,(char*)NULL,G__setup_memvarEventHeaderMC,G__setup_memfuncEventHeaderMC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_DetectorData),sizeof(DetectorData),-1,292096,(char*)NULL,G__setup_memvarDetectorData,G__setup_memfuncDetectorData);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_vectorlEDetectorHitcOallocatorlEDetectorHitgRsPgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlEDetectorHitcOallocatorlEDetectorHitgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_MCData),sizeof(MCData),-1,292096,(char*)NULL,G__setup_memvarMCData,G__setup_memfuncMCData);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_vectorlETrackcOallocatorlETrackgRsPgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlETrackcOallocatorlETrackgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_ReactionData),sizeof(ReactionData),-1,292096,(char*)NULL,G__setup_memvarReactionData,G__setup_memfuncReactionData);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR);
   G__get_linked_tagnum_fwd(&G__KnuclRootDataCintLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupKnuclRootDataCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupKnuclRootDataCint()");
  G__set_cpp_environmentKnuclRootDataCint();
  G__cpp_setup_tagtableKnuclRootDataCint();

  G__cpp_setup_inheritanceKnuclRootDataCint();

  G__cpp_setup_typetableKnuclRootDataCint();

  G__cpp_setup_memvarKnuclRootDataCint();

  G__cpp_setup_memfuncKnuclRootDataCint();
  G__cpp_setup_globalKnuclRootDataCint();
  G__cpp_setup_funcKnuclRootDataCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncKnuclRootDataCint();
  return;
}
class G__cpp_setup_initKnuclRootDataCint {
  public:
    G__cpp_setup_initKnuclRootDataCint() { G__add_setup_func("KnuclRootDataCint",(G__incsetup)(&G__cpp_setupKnuclRootDataCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initKnuclRootDataCint() { G__remove_setup_func("KnuclRootDataCint"); }
};
G__cpp_setup_initKnuclRootDataCint G__cpp_setup_initializerKnuclRootDataCint;

